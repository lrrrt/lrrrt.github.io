<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ubuntu配置备忘</title>
    <url>/2023/11/27/Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<p>相当于配置教程的一些指路，做个备忘，如果和前辈的内容重复都是我抄的，侵联删。</p>
<h1 id="双系统安装"><a href="#双系统安装" class="headerlink" title="双系统安装"></a>双系统安装</h1><p>按照<a href="https://github.com/qtjdyx/ZJUS.git">教程</a>仔细执行即可。</p>
<h2 id="黑屏问题"><a href="#黑屏问题" class="headerlink" title="黑屏问题"></a>黑屏问题</h2><h3 id="黑屏原因和场景"><a href="#黑屏原因和场景" class="headerlink" title="黑屏原因和场景"></a>黑屏原因和场景</h3><ul>
<li>黑屏原因：主要是因为和显卡冲突，也有可能是强制关机，fcitx输入法框架冲突之类的，挺玄学的。我的主要矛盾是显卡。</li>
<li>黑屏场景：①安装时黑屏 ②安装完后使用时黑屏 两种场景我都出现过，①Alienware和Legion安装时都出现过，②目前是只出现在Legion的电脑上</li>
<li>型号说明：虽然装过两台，不过型号都是i5+3050（穷）</li>
</ul>
<h3 id="黑屏解决"><a href="#黑屏解决" class="headerlink" title="黑屏解决"></a>黑屏解决</h3><ol>
<li>安装过程中黑屏的现象：<br>插入U盘后（或者是已经出现了黑屏，重启电脑后）进入Bios选择Ubuntu（或者Ubuntu install）进行以下操作<ul>
<li>在<code>Ubuntu</code>或者<code>Ubuntu install</code>选项选中时按下e</li>
<li>进入黑色的文本编辑页面将<code>quiet splash</code>后的<code>---</code>删去改为<code>quiet splash nomodeset</code></li>
<li>按F10开机（vary from PC 2 PC）</li>
</ul>
</li>
<li>安装完成后某一天突然黑屏：<br>教程指路：<a href="https://www.bilibili.com/video/BV1Mg4y1p7uN">Ubuntu安装英伟达NVIDIA显卡驱动黑屏99%的解决办法</a><br>主要步骤（来自上面的视频，此处仅作整理，侵联删）<ol>
<li>重装ubuntu（因为刚装好就黑屏了，所以不心疼），通过临时修改grub添加<code>nomodeset</code>的方法（见1）进入到图形界面。</li>
<li>打开<code>software &amp; update</code>，选择菜单栏中的<code>addtional driver</code>，选择NVIDIA的推荐驱动（最好不要用open），然后<code>apply changes</code>。</li>
<li>安装完成后重启电脑，此时会黑屏。<code>ctrl+alt+F1-6</code>进入tty模式，输入自己的用户名和密码。</li>
<li>查看自己默认的显示管理器，我的默认是gdm3，其他电脑也可能是lightdm。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/X11/default-display-manager</span><br></pre></td></tr></table></figure></li>
<li>重启完显示管理器<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart gdm3</span><br></pre></td></tr></table></figure>
这样以后可以正常开机了。</li>
</ol>
</li>
</ol>
<h2 id="f-Nvidia驱动安装"><a href="#f-Nvidia驱动安装" class="headerlink" title="f** Nvidia驱动安装"></a>f** Nvidia驱动安装</h2><ol>
<li>检查是否能识别显卡<code>nvidia-smi</code></li>
<li>打开additional driver或者software &amp; updates（部分电脑可能无法打开，或者打开速度很慢）</li>
<li>打开additional driver栏，如果无任何推荐，执行<code>sudo apt update</code>，重新打开addtional driver，选择相应的driver，推荐server型，不建议选open型（为啥，我也忘了）。我选的是<code>NVIDIA Server Driver metapackage from nvidia-driver-535-server(proprietary)</code>。</li>
<li>安装显卡管理应用。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install nvidia-settings nvidia-prime</span><br></pre></td></tr></table></figure></li>
<li>打开NVIDIA X Server Settings，转到Prime Profiles，换到性能模式Performance Mode，再重启电脑。</li>
</ol>
<h1 id="干净卸载双系统"><a href="#干净卸载双系统" class="headerlink" title="干净卸载双系统"></a>干净卸载双系统</h1><p>教程指路：<a href="https://blog.csdn.net/qq_42257666/article/details/120721561">教你彻底卸载Ubuntu双系统，去污不残留_双系统卸载ubuntu_振华OPPO的博客-CSDN博客</a></p>
<h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><ol>
<li>记不得哪几个磁盘是linux相关的话，在windows下下载相关软件比如Linux reader进行查看，或者排除法，一般那个260M的绝对不要动。不然就是windows寄掉。</li>
<li>Bios开启顺序记得将windows调整至首位，虽然我有几次重装忘了调顺序也没关系，但是看98上好像有人寄的。</li>
<li>在格式化完磁盘以后不要偷懒而忽略后面的步骤，需要执行到在windows下用diskpart那个步骤</li>
</ol>
<h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><h2 id="时间对齐"><a href="#时间对齐" class="headerlink" title="时间对齐"></a>时间对齐</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timedatectl set-local-rtc 1</span><br></pre></td></tr></table></figure>
<p>联网后显示正常</p>
<h2 id="输入法和中文"><a href="#输入法和中文" class="headerlink" title="输入法和中文"></a>输入法和中文</h2><ul>
<li>gnome不建议用fcitx，就ibus好了</li>
<li>中文字体缺失 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install fonts-cns11643-kai fonts-cns11643-sung fonts-moe-standard-kai fonts-moe-standard-song fonts-cwtex-fs fonts-cwtex-heib fonts-cwtex-heib fonts-cwtex-ming fonts-cwtex-yen fonts-wqy-microhei fonts-wqy-zenhei</span><br></pre></td></tr></table></figure></li>
<li>设置语言（大环境还是建议英文）<br> 在language support内进行设置，Regional Formats栏下的建议还是用English</li>
<li>安装输入法 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install ibus-libpinyin </span><br><span class="line">sudo apt install ibus-clutter</span><br></pre></td></tr></table></figure></li>
<li>安装完成后进入settings–&gt;region &amp; language进行语言设置；点击+号，选择chinese(intellegient pinyin)；重启</li>
</ul>
<h2 id="截图设置"><a href="#截图设置" class="headerlink" title="截图设置"></a>截图设置</h2><p>settings–&gt;Keyboard Shortcuts–&gt;Screenshots<br>我习惯截图area+clipboard这栏设置为<code>Alt+A</code></p>
<h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p><a href="https://developer.aliyun.com/article/944899#:~:text=1%EF%BC%9A%E5%A4%87%E4%BB%BD%E5%8E%9F%E6%9D%A5%E7%9A%84%E6%BA%90%20sudo%20cp%20/etc/apt/sources.list%20/etc/apt/sources_init.list,%E5%B0%86%E4%BB%A5%E5%89%8D%E7%9A%84%E6%BA%90%E5%A4%87%E4%BB%BD%E4%B8%80%E4%B8%8B%EF%BC%8C%E4%BB%A5%E9%98%B2%E4%BB%A5%E5%90%8E%E5%8F%AF%E4%BB%A5%E7%94%A8%E7%9A%84%E3%80%82%202%EF%BC%9A%E6%9B%B4%E6%8D%A2%E6%BA%90%20sudo%20gedit%20/etc/apt/sources.list%20%E4%BD%BF%E7%94%A8gedit%E6%89%93%E5%BC%80%E6%96%87%E6%A1%A3%EF%BC%8C%E5%B0%86%E4%B8%8B%E8%BE%B9%E7%9A%84%E9%98%BF%E9%87%8C%E6%BA%90%E5%A4%8D%E5%88%B6%E8%BF%9B%E5%8E%BB%EF%BC%8C%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E4%BF%9D%E5%AD%98%E5%85%B3%E9%97%AD%E3%80%82">参考</a></p>
<h1 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h1><h2 id="edge"><a href="#edge" class="headerlink" title="edge"></a>edge</h2><p><a href="https://blog.csdn.net/cugautozp/article/details/109325559">20.04linux+edge</a><br>微软的同步功能还是很香的，同步时间过长建议换成自己手机热点，一秒通。</p>
<h2 id="ros"><a href="#ros" class="headerlink" title="ros"></a>ros</h2><p><a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html">autolabor ros 教程</a></p>
<h2 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h2><p><a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/142-an-zhuang-vscode.html">autolabor ros 教程</a><br>一键同步，爽的一（因为windows下配了比较多）</p>
<h2 id="terminator"><a href="#terminator" class="headerlink" title="terminator"></a>terminator</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install terminator</span><br></pre></td></tr></table></figure>
<p>安装完后右键终端进入preference设置透明度</p>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure>
<p>安装完git校验ssh<br><a href="https://blog.csdn.net/weixin_42310154/article/details/118340458">github配置ssh key</a><br>如果出现”The authenticity of host ‘github.com’ can’t be established”的错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">ssh -T git@githubu.com</span><br></pre></td></tr></table></figure>
<h2 id="clash"><a href="#clash" class="headerlink" title="clash"></a>clash</h2><ul>
<li>查看自己是x86还是arm<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -m</span><br></pre></td></tr></table></figure></li>
<li>安装向导<br><a href="https://glados.rocks/console/clash">glados</a><br><a href="https://www.wangt.cc/2021/11/ubuntu-20-04-%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8clash-for-windows-%EF%BC%88%E6%9C%80%E7%AE%80%E5%8D%95%E7%89%88%E6%9C%AC%EF%BC%89/">CFW</a></li>
</ul>
<h2 id="DingTalk"><a href="#DingTalk" class="headerlink" title="DingTalk"></a>DingTalk</h2><p>建议别看网上教程，直接上钉钉官网下载deb</p>
<h1 id="CUDA-CUDNN"><a href="#CUDA-CUDNN" class="headerlink" title="CUDA &amp; CUDNN"></a>CUDA &amp; CUDNN</h1><p>下载建议同时进行，速度有点慢的。<br><a href="https://blog.csdn.net/h3c4lenovo/article/details/119003405">参考</a></p>
<h2 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h2><ol>
<li>从<a href="https://developer.nvidia.com/cuda-toolkit-archive">官方</a>下载cuda runfile，并执行相应的提示指令<br>Operating System: Linux<br>Architeture: x86_64<br>Distribution: Ubuntu<br>Version: 20.04<br>Installer Type: runfile(local)</li>
<li>开run：注意禁止安装集显</li>
<li>配置环境变量：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">export PATH=/usr/local/cuda-11.7/bin$&#123;PATH:+:$&#123;PATH&#125;&#125;</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda-11.7/lib64\$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;</span><br></pre></td></tr></table></figure></li>
<li>校验：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="CUDNN"><a href="#CUDNN" class="headerlink" title="CUDNN"></a>CUDNN</h2><ol>
<li>进入<a href="https://developer.nvidia.com/cudnn">官网</a>并<strong>登陆</strong>（只能说这个邮箱验证太慢了），选择合适cuda版本的cudnn。我选的Local Installer for Linux x86_64 (Tar)</li>
<li>解压后进入cudnn文件夹依次执行（注意第一条是cudnn*，网上大多是cudnn.h）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cp include/cudnn* /usr/local/cuda-11.7/include</span><br><span class="line">sudo cp lib/libcudnn* /usr/local/cuda-11.7/lib64</span><br><span class="line">sudo chmod a+r /usr/local/cuda-11.7/include/cudnn.h </span><br><span class="line">sudo chmod a+r /usr/local/cuda-11.7/lib64/libcudnn*</span><br></pre></td></tr></table></figure></li>
<li>检验（网上检验方法大概率是没有输出的）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="OPENCV"><a href="#OPENCV" class="headerlink" title="OPENCV"></a>OPENCV</h1><p>再更：又在别人电脑上装了一下，发现还是跟着官网香（甲同学跟着我这走还行，乙同学就不行了，最后乙同学和丙电脑还是按官网装的，挺顺利的，就是官网的目录顺序有点错乱，感受一下）</p>
<h2 id="安装依赖项"><a href="#安装依赖项" class="headerlink" title="安装依赖项"></a>安装依赖项</h2><p>可以多看几篇博客里的依赖项，都装装不嫌多（但是别无脑粘啊。。。），比如：<br><a href="https://blog.csdn.net/weixin_44796670/article/details/115900538">ubuntu20.04搭建opencv 4.5.0</a></p>
<h2 id="下载OPENCV安装包和contrib"><a href="#下载OPENCV安装包和contrib" class="headerlink" title="下载OPENCV安装包和contrib"></a>下载OPENCV安装包和contrib</h2><p>这里注意两个包版本对上，然后重命名为opencv_contrib和opencv，然后将opencv_trib放到opencv文件下，然后执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd opencv</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure>
<h2 id="大概率会缺的东西（不要执行，只是做说明）"><a href="#大概率会缺的东西（不要执行，只是做说明）" class="headerlink" title="大概率会缺的东西（不要执行，只是做说明）"></a>大概率会缺的东西（不要执行，只是做说明）</h2><p>如果按照某些教程直接走的话，大概率会遇到这几个问题：</p>
<ol>
<li>安装OpenCV时提示缺少boostdesc_bgm.i文件：<a href="https://blog.csdn.net/AlexWang30/article/details/99612188">https://blog.csdn.net/AlexWang30/article/details/99612188</a></li>
<li>找不到 feature2d&#x2F;test&#x2F;test_detectors_regression.impl.hpp 文件：<a href="https://blog.csdn.net/xiewenrui1996/article/details/108683866">https://blog.csdn.net/xiewenrui1996/article/details/108683866</a></li>
<li>可能还会有比较小众的问题，比如最后都[100%]了，还一大堆phase unwrapping之类的，忘了<br>前两个还好，第三个估计是因为中途加上了boostdesc_bgm.i等文件产生的编译顺序问题cmake选项之类的问题，我也不清楚，就是连坐出来的问题吧，所以建议把缺的都补上了再开始cmake</li>
</ol>
<h2 id="真正做的编译准备和命令"><a href="#真正做的编译准备和命令" class="headerlink" title="真正做的编译准备和命令"></a>真正做的编译准备和命令</h2><ol>
<li>先按照 <a href="https://blog.csdn.net/AlexWang30/article/details/99612188">.i文件缺失</a> 把所有缺失的文件下载下来放到opencv_contrib&#x2F;modules&#x2F;xfeatures2d&#x2F;src&#x2F;下</li>
<li>把opencv &#x2F; modules &#x2F; features2d复制粘贴到build目录下</li>
<li>在build目录下执行<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_GENERATE_PKGCONFIG=YES -D OPENCV_EXTRA_MODULES_PATH=/home/主机登录名/opencv/opencv_contrib/modules ..</span><br></pre></td></tr></table></figure>
这里-D OPENCV_GENERATE_PKGCONFIG&#x3D;YES是因为OpenCV4以上默认不使用pkg-config，该编译选项开启生成opencv4.pc文件，支持pkg-config功能</li>
<li>完成后执行<code>sudo make -j8</code>（-j8是根据电脑配置添加上的参数，8代表为处理器8线程，可以省略）</li>
<li><code>sudo make install</code></li>
</ol>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/ld.so.conf.d/opencv.conf</span><br><span class="line">\\ 输入 /usr/local/lib</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>
<p>配置bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/bash.bashrc</span><br><span class="line">// 添加</span><br><span class="line">PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig</span><br><span class="line">export PKG_CONFIG_PATH</span><br><span class="line">// save</span><br><span class="line">source /etc/bash.bashrc</span><br><span class="line">// 命令行字体变白可以reboot</span><br><span class="line">// 关cmd应该也没事</span><br><span class="line">// 检验</span><br><span class="line">pkg-config --modversion opencv4</span><br></pre></td></tr></table></figure>

<h1 id="darknet"><a href="#darknet" class="headerlink" title="darknet"></a>darknet</h1><h2 id="Makefile改哪里"><a href="#Makefile改哪里" class="headerlink" title="Makefile改哪里"></a>Makefile改哪里</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GPU=1</span><br><span class="line">CUDNN=1</span><br><span class="line">OPENCV=1</span><br><span class="line">NVCC=/usr/local/cuda/bin/nvcc</span><br></pre></td></tr></table></figure>
<h2 id="opencv2-opencv-hpp-No-such-file-or-directory"><a href="#opencv2-opencv-hpp-No-such-file-or-directory" class="headerlink" title="opencv2&#x2F;opencv.hpp: No such file or directory"></a>opencv2&#x2F;opencv.hpp: No such file or directory</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/local/lib/pkgconfig/opencv4.pc /usr/lib/pkgconfig</span><br><span class="line">cd /usr/lib/pkgconfig</span><br><span class="line">mv opencv4.pc opencv.pc</span><br></pre></td></tr></table></figure>
<h2 id="CUDNN-CONVOLUTION-FWD-SPECIFY-WORKSPACE-LIMIT’-undeclared-first-use-in-this-function"><a href="#CUDNN-CONVOLUTION-FWD-SPECIFY-WORKSPACE-LIMIT’-undeclared-first-use-in-this-function" class="headerlink" title="CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT’ undeclared (first use in this function)"></a>CUDNN_CONVOLUTION_FWD_SPECIFY_WORKSPACE_LIMIT’ undeclared (first use in this function)</h2><p>这个版本的darknet不能使用cudnn8编译，基本配显卡的又是11开头的。<br><a href="https://github.com/arnoldfychen/darknet/blob/master/src/convolutional_layer.c">https://github.com/arnoldfychen/darknet/blob/master/src/convolutional_layer.c</a><br>把这个代码直接替换到报错的文件里</p>
<h2 id="‘IplImage’-does-not-name-a-type，改完还走色"><a href="#‘IplImage’-does-not-name-a-type，改完还走色" class="headerlink" title="‘IplImage’ does not name a type，改完还走色"></a>‘IplImage’ does not name a type，改完还走色</h2><p>这个网上教程挺多的，我参考了这么几个</p>
<ol>
<li><a href="https://blog.csdn.net/qq_43697649/article/details/104502113">https://blog.csdn.net/qq_43697649/article/details/104502113</a></li>
<li><a href="https://blog.csdn.net/quicmous/article/details/113432144">https://blog.csdn.net/quicmous/article/details/113432144</a></li>
<li><a href="https://www.cnblogs.com/happyamyhope/p/16480794.html">https://www.cnblogs.com/happyamyhope/p/16480794.html</a></li>
</ol>
<p>综合一下，我是把2中的代码直接替换我的image_opencv.cpp，执行测试的时候发现我脸蓝了，狗灰了，按照3中将将 image_to_mat函数中的<code>float val = im.data[c*im.h*im.w + y*im.w + x];</code>替换为<code>float val = copy.data[c*im.h*im.w + y*im.w + x];</code>，顺利通过~。</p>
<h1 id="px4"><a href="#px4" class="headerlink" title="px4"></a>px4</h1><p><strong>【自用，写的很乱】</strong></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><a href="https://blog.csdn.net/HuangChen666/article/details/128754106">Ubuntu20.04+MAVROS+PX4+Gazebo保姆级安装教程</a></p>
<p>出的问题主要是clone不完整。</p>
<ol>
<li>第一次装后make测试的时候给我报datamen的错误，没法takeoff（pxh命令行没有，装完也没有reboot的提示），并且多次测试的时候，多个飞机叠在一起，问题描述如果搜过的话就是和gitee上有个issue一毛一样，我这不指路了。大概是因为按第二个博客走的时候checkout了，版本错乱。</li>
<li>后来重新clone px4-autopilot，按第一个教程走，第一遍通了，后面测试又没法make了。重命名为px4-firmware后才可以。后来另一台不重命名也没事了，不知道啥毛病。</li>
<li>端口不存在的问题FCU: DeviceError:serial:open: No such file or directory（没连硬件）不是什么大问题，中间也遇到了，博客园有篇<a href="https://www.cnblogs.com/soapen/articles/17342907.html#3mavros%E5%AE%89%E8%A3%85">https://www.cnblogs.com/soapen/articles/17342907.html#3mavros%E5%AE%89%E8%A3%85</a> ，没有亲测过。</li>
</ol>
<p>最后测试可以参考<a href="https://zhuanlan.zhihu.com/p/438699349">https://zhuanlan.zhihu.com/p/438699349</a></p>
<h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/PX4/PX4-Autopilot.git --recursive</span><br><span class="line">cd PX4-Autopilot/</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">// 这一步做完以后一定查看是否有没clone完的情况</span><br><span class="line">// 第一次配由于各种问题，发现需要重命名，不知道是不是我已经配完bash了</span><br><span class="line">// 第二次配我没有重命名，后面配环境变量的时候也注意一下</span><br><span class="line">mv PX4-Autopilot PX4_Firmware</span><br><span class="line">cd PX4_Firmware</span><br><span class="line">bash ./Tools/setup/ubuntu.sh</span><br><span class="line">//reboot</span><br><span class="line">make px4_sitl_default gazebo</span><br></pre></td></tr></table></figure>
<p>成功后配置环境变量（可以take off）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">//加这几句在后面</span><br><span class="line">source ~/PX4_Firmware/Tools/simulation/gazebo-classic/setup_gazebo.bash ~/PX4_Firmware ~/PX4_Firmware/build/px4_sitl_default</span><br><span class="line">export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/PX4_Firmware</span><br><span class="line">export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/PX4_Firmware/Tools/simulation/gazebo-classic/sitl_gazebo-classic</span><br></pre></td></tr></table></figure>

<h1 id="slam14"><a href="#slam14" class="headerlink" title="slam14"></a>slam14</h1><p><a href="https://zhuanlan.zhihu.com/p/452256687">视觉SLAM十四讲环境搭建（测试环境Ubuntu20.04）</a><br>Sophus<br><a href="https://blog.csdn.net/weixin_62952541/article/details/130181245">踩坑 Sophus 模板库安装及编译</a></p>
]]></content>
      <categories>
        <category>配置备忘录</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>butterfly博客配置备忘</title>
    <url>/2023/11/24/butterfly%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<h2 id="花瓣飘落调整"><a href="#花瓣飘落调整" class="headerlink" title="花瓣飘落调整"></a>花瓣飘落调整</h2><h3 id="花瓣数量和速度减小"><a href="#花瓣数量和速度减小" class="headerlink" title="花瓣数量和速度减小"></a>花瓣数量和速度减小</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (var i = 0; i &lt; 30; i++) &#123;</span><br><span class="line">        var sakura, randomX, randomY, randomS, randomR, randomFnx, randomFny;</span><br><span class="line">        randomX = getRandom(&#x27;x&#x27;);</span><br><span class="line">        randomY = getRandom(&#x27;y&#x27;);</span><br><span class="line">        randomR = getRandom(&#x27;r&#x27;);</span><br><span class="line">        randomS = getRandom(&#x27;s&#x27;)*0.5;</span><br><span class="line">        randomFnx = getRandom(&#x27;fnx&#x27;);</span><br><span class="line">        randomFny = getRandom(&#x27;fny&#x27;);</span><br><span class="line">        randomFnR = getRandom(&#x27;fnr&#x27;);</span><br><span class="line">        sakura = new Sakura(randomX, randomY, randomS, randomR, &#123;</span><br><span class="line">            x: randomFnx,</span><br><span class="line">            y: randomFny,</span><br><span class="line">            r: randomFnR</span><br><span class="line">        &#125;);</span><br><span class="line">        sakura.draw(cxt);</span><br><span class="line">        sakuraList.push(sakura);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="花瓣和文章卡片的覆盖顺序"><a href="#花瓣和文章卡片的覆盖顺序" class="headerlink" title="花瓣和文章卡片的覆盖顺序"></a>花瓣和文章卡片的覆盖顺序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">canvas.setAttribute(&#x27;style&#x27;, &#x27;position: fixed;left: 0;top: 0;z-index: -1;background-color: transparent;&#x27;);</span><br><span class="line">// canvas.setAttribute(&#x27;style&#x27;, &#x27;position: fixed;left: 0;top: 0;pointer-events: none;&#x27;);</span><br></pre></td></tr></table></figure>
<h2 id="文章上锁"><a href="#文章上锁" class="headerlink" title="文章上锁"></a>文章上锁</h2><p>来源：<a href="https://zhuanlan.zhihu.com/p/113235573">https://zhuanlan.zhihu.com/p/113235573</a></p>
<ul>
<li>安装<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>
<li>修改文章信息头<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">- 加密文章tag</span><br><span class="line">date: 2020-03-13 21:12:21</span><br><span class="line">password: muyiio</span><br><span class="line">abstract: 这里有东西被加密了，需要输入密码查看哦。</span><br><span class="line">message: 您好，这里需要密码。</span><br><span class="line">wrong_pass_message: 抱歉，这个密码看着不太对，请再试试。</span><br><span class="line">wrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
<li>修改根目录配置文件<br>添加以下字段  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安全</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">abstract: 这里有东西被加密了，需要输入密码查看哦。</span><br><span class="line">message: 您好, 这里需要密码.</span><br><span class="line">tags:</span><br><span class="line">- &#123;name: tagName, password: 密码A&#125;</span><br><span class="line">- &#123;name: tagName, password: 密码B&#125;</span><br><span class="line">template: &lt;div id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;&#123;&#123;hbeWrongPassMessage&#125;&#125;&quot; data-whm=&quot;&#123;&#123;hbeWrongHashMessage&#125;&#125;&quot;&gt;&lt;div class=&quot;hbe-input-container&quot;&gt;&lt;input type=&quot;password&quot; id=&quot;hbePass&quot; placeholder=&quot;&#123;&#123;hbeMessage&#125;&#125;&quot; /&gt;&lt;label&gt;&#123;&#123;hbeMessage&#125;&#125;&lt;/label&gt;&lt;div class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;&#123;&#123;hbeHmacDigest&#125;&#125;&quot;&gt;&#123;&#123;hbeEncryptedData&#125;&#125;&lt;/script&gt;&lt;/div&gt;</span><br><span class="line">wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br></pre></td></tr></table></figure></li>
<li>但是毕竟……<br>上锁的文章算是日记本，看也没啥关系，只是发发牢骚而已。</li>
</ul>
]]></content>
      <categories>
        <category>配置备忘录</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>pytorch+conda+pycharm配置备忘</title>
    <url>/2023/09/24/pytorch-conda-pycharm%E9%85%8D%E7%BD%AE%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<h3 id="下载conda"><a href="#下载conda" class="headerlink" title="下载conda"></a>下载conda</h3><p>miniconda和anaconda应该都是可以的，因为花书上是miniconda所以我也是装的miniconda<br><a href="https://www.bilibili.com/video/BV1JP4y1f7q3">李沐动手学深度学习Windows环境配置</a><br>这个是没有配GPU的</p>
<h3 id="配置GPU"><a href="#配置GPU" class="headerlink" title="配置GPU"></a>配置GPU</h3><p>CPU和GPU应该都可以，大致的过程是查阅电脑参数并选择<strong>合适自己电脑的CUDA</strong>，我这台是Y7000P RTX3050的，基本上30开头的显卡都是装11版本的CUDA，我装的是11.7CUDA<br>这个up主超级详细，简直是我的大救星！<br><a href="https://www.bilibili.com/video/BV1S5411X7FY">最详细的 Windows 下 PyTorch 入门深度学习环境安装与配置 CPU GPU 版 | 土堆教程</a></p>
<h3 id="配置pytorch"><a href="#配置pytorch" class="headerlink" title="配置pytorch"></a>配置pytorch</h3><p>也是看上面这个up主（2022年的），评论也很精华，基本上可以解决，老旧版本的都有。<br>一些坑：</p>
<ul>
<li>换源！</li>
<li>中途因为某个问题我把chardet卸掉了，再装的时候失败，无法登上jupyter notebook，这边试出来是豆瓣网的trust问题，要加–trust参数，这个csdn上输一下报错就有命令的</li>
</ul>
<h3 id="conda-pycharm"><a href="#conda-pycharm" class="headerlink" title="conda+pycharm"></a>conda+pycharm</h3><p>高版本的pycharm无法识别本地interpreter，先按默认创个环境，再进setting，python interpreter，选择condabin下的conda.bat（可能anaconda和mini有区别，anaconda可能是exe），之后load就可以选择自己的环境了。<br><a href="https://blog.csdn.net/qianyunzzz/article/details/122489967">高版本pycharm配置</a></p>
]]></content>
      <categories>
        <category>配置备忘录</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>去种花</title>
    <url>/2023/09/19/%E5%8E%BB%E7%A7%8D%E8%8A%B1/</url>
    <content><![CDATA[<h3 id="2023-1-2-Tuseday-转自98"><a href="#2023-1-2-Tuseday-转自98" class="headerlink" title="2023.1.2 Tuseday~转自98"></a>2023.1.2 Tuseday~转自98</h3><p>没关系，继续尝试，继续失败，以更好的姿态失败。</p>
<p>只要不关注任何人的动态，不揣测任何人的想法，不去设想一些没发生的事情，简单点，顿一点，慢一点，你会发现你过得很自在。</p>
<h3 id="2023-12-29-Friday-转自狒狒同学"><a href="#2023-12-29-Friday-转自狒狒同学" class="headerlink" title="2023.12.29 Friday~转自狒狒同学"></a>2023.12.29 Friday~转自狒狒同学</h3><p>痛苦：动物处在一种不得不动用大量的精力或资源来适应性地应对来自环境或境况挑战和威胁的状态。</p>
<h3 id="2023-12-3-Sunday-完成，比完美更重要"><a href="#2023-12-3-Sunday-完成，比完美更重要" class="headerlink" title="2023.12.3 Sunday~完成，比完美更重要"></a>2023.12.3 Sunday~完成，比完美更重要</h3><p>人性最贱之处在于，在工作越紧张时、生活越艰难时，实现那些不切实际的梦想的愿望和冲动，反而更强烈了。<br>而一旦悠闲下来，失去外界的压力，创作的动力，也会随之消减，真的是莫名其妙。</p>
<h3 id="2023-12-1-Friday-此间的流浪"><a href="#2023-12-1-Friday-此间的流浪" class="headerlink" title="2023.12.1 Friday~此间的流浪"></a>2023.12.1 Friday~此间的流浪</h3><p>路上看到美妙的风景<br>却没有想告诉的人</p>
<p>不是时光在流逝<br>而是我们和这个世界<br>在一起流逝</p>
<p>后来他跑掉了<br>从此消失在丛林深处和我的生命里</p>
<p>烹雪煮茶<br>白首天涯<br>万家灯火<br>月落归家</p>
<h3 id="2023-10-20-Friday-独行也如众"><a href="#2023-10-20-Friday-独行也如众" class="headerlink" title="2023.10.20 Friday~独行也如众"></a>2023.10.20 Friday~独行也如众</h3><p>别为假期无所事事而焦虑不安<br>多两天辛苦不能让你暴富<br>但你的身心急需这两天的休息</p>
<p>希望你的小世界里<br>山花烂漫，茶酒俱全<br>安宁清淡，明朗欢愉</p>
<p>内心丰盈者，独行也如众</p>
<h3 id="2023-9-24-Sunday-人间忽晚，山河已秋"><a href="#2023-9-24-Sunday-人间忽晚，山河已秋" class="headerlink" title="2023.9.24 Sunday~人间忽晚，山河已秋"></a>2023.9.24 Sunday~人间忽晚，山河已秋</h3><p>天凉好个秋！</p>
<h3 id="2023-9-19-Tuseday-幸福不是出门多风光"><a href="#2023-9-19-Tuseday-幸福不是出门多风光" class="headerlink" title="2023.9.19 Tuseday~幸福不是出门多风光"></a>2023.9.19 Tuseday~幸福不是出门多风光</h3><p>喜欢蝴蝶 别去追逐 去种花<br>站得太久 都忘了自己在等什么<br>念旧的人 总是一身狼狈<br>以欢喜之心 渡烟火日常 念别人的好 修自己的心</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>读书炸鸡</tag>
      </tags>
  </entry>
  <entry>
    <title>托福首考记录和碎碎念</title>
    <url>/2023/11/24/%E6%89%98%E7%A6%8F%E9%A6%96%E8%80%83%E8%AE%B0%E5%BD%95%E5%92%8C%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
    <content><![CDATA[<p>不敢称作经验分享，故作记录</p>
<h2 id="背景和碎碎念"><a href="#背景和碎碎念" class="headerlink" title="背景和碎碎念"></a>背景和碎碎念</h2><p>lz参加是的9.10早上的考试院托福。备考从7.13开始，中间还夹着各种社会实践学长组之类的（活动前后会大摆一段时间，合计下来大概有在学的时间应该算一个多月）。这次算第一次参加托福，而且还年轻，所以压力也不大（压力是不大，但焦虑还是要为2100焦虑的），没有很明确的说一定要考到什么分数，主打佛系备考，反正还要继续交钱。</p>
<p>英语情况：lz裸考四级599裸考六级591，高考结束的时候报过一个大概7天左右的托福班（文三路的肆墨教育，四个part的老师人都很好[而且也只有四个老师和一两个检查背单词收手机的助教]，水平也很高），不过这次备考没报班。</p>
<h2 id="新版考试感受"><a href="#新版考试感受" class="headerlink" title="新版考试感受"></a>新版考试感受</h2><ul>
<li><p>到达考试院</p>
<p>8：30的入场要求，鉴于第一次考和lz的龟速洗漱，6：40就起床了（想死），做地铁到文三路已经8：10了（没错就是我的问题）</p>
<p>在地铁上粗粗看了一篇阅读，复习了一下口语和写作的模板。</p>
</li>
<li><p>必备物品与考前流程</p>
<p>带<strong>确认信、身份证</strong></p>
<p>在门口根据考场拿承诺书，然后上楼放包，现在可能因为改革<strong>水也不能带</strong>了（之前看好像可以带水和吃的），纸巾也不能带，带进候场教室的<strong>只有身份证和承诺书</strong>（就是兜兜全空手里只有身份证和承诺书）。写完承诺书以后还可以去洗手间。</p>
<p>外套也可以带，不过考试过程中一脱下就要举手给老师拿到候场室不再拿回，lz本来以为可以挂椅子上（事实上绑腰上也不行），结果在大夏天裹着外套考完了emm。</p>
<p>然后就进考场拍照-&gt;分座位-&gt;等老师输密码</p>
</li>
<li><p>考试过程</p>
<ul>
<li>新版考试时长2h，8：45以后就陆续开始了。<br>  阅读之前先测耳机和麦克风，我没搞清楚麦克风怎么调，直接点了测试按钮，测出来声音low就直接跳进下一流程了，一脸懵，导致口语时一直在把麦克风往嘴边靠然后喊（对我来说的“喊”）。（楼下前辈说low应该没关系，后面应该会自动调整）</li>
<li><strong>阅读</strong>：虽然早上摄入了一点阅读，但是刚开始没有进入状态，前面三题像是没睡醒做的，后来回去把前三题全改了一遍。。。第二篇快做完的时候其实已经听到别人耳机里的声音了。不过对第一篇不是很放心，在阅读游荡到时间流完。另外当时考试的时候隔壁桌的兄弟程序好像出bug了，当时戴着耳机不是很确定，大概是因为狂点导致回不去了还是黑屏好像，老师也只是说之后再看先考着，所以大家考试还是心平气和做题，<strong>慢慢点next</strong>）</li>
<li><strong>听力</strong>：前面都比较正常，在最后一篇还没听完的时候考场里已经开始有人考口语了，感觉这也很影响专注力，倒不是因为声音对听力的干扰，只是担心自己进度跟不上的焦虑（返回来看其实进度还OK的），写题目的时候会刻意听听别人咋讲，我当时听到了task1里的independence, children和task2的roof, energy，虽然给我口语有个大概的准备，但是听力做题的专注力就一般，而且平时听力结束还可以剩比较多的时间，这次听点这听点那最后写完只剩40s了，有点危险。<strong>新版听力没有OK按键</strong>。</li>
<li><strong>口语</strong>：速度在中游，努力喊就是了。</li>
<li><strong>写作</strong>：在准备界面我拖了一小会，等声音小一些。不熟悉键盘，所以是盯着键盘敲的。感觉学术讨论时间会比较紧，点也比较难想（然而这绝对又是我的备考问题）。</li>
</ul>
</li>
</ul>
<h2 id="备考忏悔"><a href="#备考忏悔" class="headerlink" title="备考忏悔"></a>备考忏悔</h2><ul>
<li><p><strong>词汇</strong>：过了一遍学科类词汇，新东方的绿本大概背到list20，最后俩星期根本没背，现在再看一下估计全忘了。虽然对考试影响不大，但是阅读能力没有上去，只是单纯地应试而已。</p>
</li>
<li><p><strong>阅读</strong>：复习方法-刷题</p>
<p>侥幸这次比较简单，前一天挑的难度稍微大一点的历史类文章做成一坨，文学话题的文章还是要多读，速度也不够。</p>
</li>
<li><p><strong>听力</strong>：复习方法-刷题精听+听youtube英文课</p>
<p>这次备考有点提升的是听力（虽然考试的时候最后注意力被口语分散了感觉不是很好），倒并不是因为刷题目。备考期间正好在学cs61b，感觉这个反而影响更明显。刚开始听课还需要开英文字幕，后面可以关掉英文字幕，然后偶尔可以接受倍速，再加上长时间的学习，相当于在听时长40min+的lecture。所以下次备考的时候可以尝试一下在youtube上听一些文学的课。听力觉得有瓶颈的大噶也可以试试去听英文的专业课，一边预习一边练听力，至少对我来说挺有用。</p>
</li>
<li><p><strong>口语</strong>：(复习不充分)复习方法-b站吴奇老师的脱口秀+刷题 </p>
<p>备考时间大概5天（越到后面越摆了），题型大致了解是看这个<a href="https://www.bilibili.com/video/BV1b7411t7Vr/?share_source=copy_web&vd_source=70adbb3ab03cac7344c40785632f6bd5">题型要求</a>，但是这里的模板感觉有点生硬，然后把<a href="https://www.bilibili.com/video/BV1dq4y1m7Av/?share_source=copy_web&vd_source=70adbb3ab03cac7344c40785632f6bd5">吴奇老师的task1</a>过了一遍，task2-4我也是看的吴奇老师，不过大概就过了15-20份左右。看几次e-rater语法和换词还有很大的提升空间。</p>
</li>
<li><p><strong>写作</strong>：(复习极不充分)好好好，就写了一份模考背了模板就上考场了，写个鸟。。</p>
<p>昨天翻邮箱看到了一年前老师发的资料，也扔在这里，不过是老版本，我也没咋看。</p>
</li>
</ul>
<h2 id="后面的碎碎念"><a href="#后面的碎碎念" class="headerlink" title="后面的碎碎念"></a>后面的碎碎念</h2><p>考前一天中午hotpot party吃太撑，晚上又因为首考嘎嘎紧张，既吃不进去也学不进去，摆烂焦虑无事就去考试院踩点了。游荡一会10点就上床碎叫了。事实证明我真的很紧张，早上1点2点3点5点都醒了一次，全部是因为自己以为已经迟到了。早上起来看到昨天朋友发来的消息又舒坦不少，“专注于当下，放下焦虑和希望”，真好真好，一下就是随缘考法。<br>考完分数出来是R30L27，另外两门也没啥期望值，趁成绩没出来先厚着脸皮水完这篇。<br>因为经验不足，考试体验可能还有点漏洞，仅作参考。祝备考的大家都都破110~</p>
]]></content>
      <tags>
        <tag>英语学习</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构基础--图</title>
    <url>/2023/12/29/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80-%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="Topological-Sort"><a href="#Topological-Sort" class="headerlink" title="Topological Sort"></a>Topological Sort</h1><ul>
<li>why we need topsort？<br>AOV network<br>AOE network</li>
<li>features:<ul>
<li>it must be a dag if feasible</li>
<li>a precedence relation which is both transitive(i-&gt;k,k-&gt;j,i-&gt;j) and irreflexive(i-&gt;i is impossible)</li>
</ul>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//T=O(|V|^2)</span></span><br><span class="line"><span class="comment">// :(</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Topsort</span><span class="params">(Graph G)</span></span><br><span class="line">&#123;</span><br><span class="line">    Vertex V,W;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> cnt=<span class="number">0</span>;cnt&lt;NumVertex;cnt++)</span><br><span class="line">    &#123;</span><br><span class="line">        V=findNewVertexOfDegreeZero();</span><br><span class="line">        <span class="keyword">if</span>(V is not a vertex)</span><br><span class="line">        &#123;</span><br><span class="line">            Error(<span class="string">&quot;Graph has a cycle&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        TopNum[V]=cnt; <span class="comment">//or output V</span></span><br><span class="line">        <span class="keyword">for</span>(each W adjacent to V)</span><br><span class="line">        &#123;</span><br><span class="line">            Indegree[W]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Topsort</span><span class="params">(Graph G)</span></span><br><span class="line">&#123;</span><br><span class="line">    Queue Q; <span class="comment">// stack ok</span></span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    Vertex V,W;</span><br><span class="line">    Q=CreateQueue(NumVertex);</span><br><span class="line">    MakeEmpty(Q);</span><br><span class="line">    <span class="keyword">for</span>(each Vertex V)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Indegree[V]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Enqueue(V,Q);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(Q is not empty)</span><br><span class="line">    &#123;</span><br><span class="line">        V=Dequeue(Q);</span><br><span class="line">        TopNum[V]=cnt;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">for</span>(each vertex W adjacent to V)</span><br><span class="line">        &#123;</span><br><span class="line">            Indegree[W]--;</span><br><span class="line">            <span class="keyword">if</span>(Indegree[W]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Enqueue(W,Q);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt!=NumVertex)</span><br><span class="line">    &#123;</span><br><span class="line">        Error(<span class="string">&quot;Graph has a cycle&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Dispose(Q);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="Shortest-Path"><a href="#Shortest-Path" class="headerlink" title="Shortest Path"></a>Shortest Path</h1><h2 id="Unweighted-Graph"><a href="#Unweighted-Graph" class="headerlink" title="Unweighted Graph"></a>Unweighted Graph</h2><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Table[i].Dist: distance from s to vi</span></span><br><span class="line"><span class="comment">Table[i].Path: initialized to be 0, for tracking</span></span><br><span class="line"><span class="comment">Table[i].Known: if checked</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//T=O(|V|^2)</span></span><br><span class="line"><span class="comment">// :(</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Unweighted</span><span class="params">(Table T)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> curdist;</span><br><span class="line">    Vertex V,W;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> curdis=<span class="number">0</span>;curdis&lt;NumVertex;curdis++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(each Vertex V) <span class="comment">//improvement done here</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(T[V].Known==<span class="number">0</span> &amp;&amp; T[V].Dist==curdist)</span><br><span class="line">            &#123;</span><br><span class="line">                T[V].Known=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(each Vertex W adjacent to V)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(T[W].Dist==Infinity)</span><br><span class="line">                    &#123;</span><br><span class="line">                        T[W].Dist=T[V]+<span class="number">1</span>;</span><br><span class="line">                        T[W].Path=V;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//T=O(|V|+|E|)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Unweighted</span><span class="params">(Table T)</span></span><br><span class="line">&#123;</span><br><span class="line">    Queue Q;</span><br><span class="line">    Vertex V,W;</span><br><span class="line">    Q=CreateQueue(Numvertex);</span><br><span class="line">    MakeEmpty(Q);</span><br><span class="line">    Enqueue(S,Q);</span><br><span class="line">    <span class="keyword">while</span>(Q is not empty)</span><br><span class="line">    &#123;</span><br><span class="line">        V=Dequeue(Q);</span><br><span class="line">        T[V].Known=<span class="number">1</span>; <span class="comment">//actually not need for Known</span></span><br><span class="line">        <span class="keyword">for</span>(each W adjacent to V)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(T[W].Dist==Infinity)</span><br><span class="line">            &#123;</span><br><span class="line">                T[W].Dist=T[V].Dist+<span class="number">1</span>;</span><br><span class="line">                T[W].Path=V;</span><br><span class="line">                Enqueue(W,Q);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Dispose(Q);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Weighted-Graph"><a href="#Weighted-Graph" class="headerlink" title="Weighted Graph"></a>Weighted Graph</h2><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//T complexity depends how to function smallest unknown distance Vertex</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Dijkstra</span><span class="params">(Table T)</span></span><br><span class="line">&#123;</span><br><span class="line">    Vertex V,W;</span><br><span class="line">    <span class="keyword">for</span>(;;)</span><br><span class="line">    &#123;</span><br><span class="line">        V=smallest unknown distance Vertex;</span><br><span class="line">        <span class="keyword">if</span>(V is not Vertex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        T[V].Known=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(each W adjacent to V)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(T[W].Known==<span class="number">0</span> &amp;&amp; T[W].Dist&gt;T[V].Dist+Cvw)</span><br><span class="line">            &#123;</span><br><span class="line">                T[W].Dist=T[V].Dist+Cvw;</span><br><span class="line">                T[W].Path=V;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>How to find smallest unknown distance Vertex?</p>
<ul>
<li>Implementation1<ul>
<li>scan the table</li>
<li>T&#x3D;O(|V|^2+|E|)</li>
</ul>
</li>
<li>Implementation2<ul>
<li>keep distances in a priority queue and call deletemin, O(log|V|)</li>
<li>Decrease( T[W].Dist to T[V].Dist+Cvw );<ul>
<li>Method 1: DecreaseKey – O(log|V|)<br>T &#x3D; O(|V|log|V|+|E|log|V|) &#x3D; O(|E|log|V|)</li>
<li>Method 2: insert W with updated Dist into the priority queue<br>T &#x3D; O(|E|log|V|) but requires |E| DeleteMin with |E| space</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="SPFA"><a href="#SPFA" class="headerlink" title="SPFA"></a>SPFA</h3><p>worst case: O(|E|)<br>best case: O(|E||V|)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">WeightNegtive</span><span class="params">(Table T)</span></span><br><span class="line">&#123;</span><br><span class="line">    Queue Q=CreateQueue;</span><br><span class="line">    Vertex V,W;</span><br><span class="line">    Enqueue(Q,S);</span><br><span class="line">    <span class="keyword">while</span>(Q is not empty)</span><br><span class="line">    &#123;</span><br><span class="line">        V=Dequeue(Q);</span><br><span class="line">        <span class="keyword">for</span>(each W adjacent to V)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(T[V].Dist+Cvw&lt;T[W].Dist)</span><br><span class="line">            &#123;</span><br><span class="line">                T[W].Dist=T[V].Dist+Cvw;</span><br><span class="line">                T[W].Path=V;</span><br><span class="line">                <span class="keyword">if</span>(W is not already in Q)</span><br><span class="line">                &#123;</span><br><span class="line">                    Enqueue(Q,W);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Dispose(Q);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>How to determine whether a graph has a negative cycle?</p>
<ol>
<li>add an array called <code>cnt</code>, update <code>cnt[W]=cnt[V]+1</code> during relaxation step</li>
<li>If, at any point, there exists<code>cnt==NumVertex</code>, it indicates the presence of a negative cycle. This is because in a graph without cycles, the maximum possible value for cnt would be NumVertex - 1.</li>
</ol>
<h1 id="DAG"><a href="#DAG" class="headerlink" title="DAG"></a>DAG</h1><h2 id="AOE-network"><a href="#AOE-network" class="headerlink" title="AOE network"></a>AOE network</h2><p><strong>Example</strong><br>scheduling a project</p>
<ul>
<li>Dummy Node: A- - - -&gt;B——&gt;C<br>B does not need to be done before A<br>Both tasks A and B must be completed before task C can be started</li>
<li>EC time(earlist time): EC[W]&#x3D;max(EC[V]+Cvw)</li>
<li>LC time(latest time): LC[V]&#x3D;min(LC[W]-Cvw)<br><code>(V is predecessor of W)</code></li>
<li>Critical Path: the edges that have 0 slack time</li>
</ul>
<h1 id="Network-Flow"><a href="#Network-Flow" class="headerlink" title="Network Flow"></a>Network Flow</h1><p><a href="https://www.bilibili.com/video/BV1Pv41157xh">Ford-Fulkerson Algorithm</a></p>
<ol>
<li>build a residual graph; initialize the residuals to the capacities</li>
<li>while augmenting path can be found<br> a. find an augmenting path on the residual graph<br> b. find the bottleneck capacity x on the augmenting path<br> c. update the residuals<br> d. add a backward path(allow undo)</li>
</ol>
<p>Time complexity: O(f*m)(f is the max flow, m is |E|)<br>Usually, we prefer to go through the large flow first(for later convenience)</p>
<h1 id="Minimum-Spanning-Tree"><a href="#Minimum-Spanning-Tree" class="headerlink" title="Minimum Spanning Tree"></a>Minimum Spanning Tree</h1><h2 id="Prim"><a href="#Prim" class="headerlink" title="Prim"></a>Prim</h2><p>The Difference between Prim and Dijkstra<br>the distance to be updated</p>
<ul>
<li>Prim: just pick the lowest cost(the distance between target and <strong>visited set</strong>)</li>
<li>Dij: the distance from <strong>source</strong> to target</li>
</ul>
<h2 id="Kruskal"><a href="#Kruskal" class="headerlink" title="Kruskal"></a>Kruskal</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Kruscal</span><span class="params">(Graph G)</span></span><br><span class="line">&#123;</span><br><span class="line">    T=&#123;&#125;;</span><br><span class="line">    <span class="keyword">while</span>(T contains less than |V|<span class="number">-1</span> edges &amp;&amp; E is not empty)</span><br><span class="line">    &#123;</span><br><span class="line">        choose a least cost <span class="title function_">edge</span> <span class="params">(v,w)</span> from E; <span class="comment">// Deletemin</span></span><br><span class="line">        delete(v,w) from E;</span><br><span class="line">        <span class="keyword">if</span>((v,w) does not create a cycle in T)</span><br><span class="line">        &#123;</span><br><span class="line">            add(v,w) to T; <span class="comment">// Union Find</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            discard(v,w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(T contains fewer than |V|<span class="number">-1</span> edges)</span><br><span class="line">    &#123;</span><br><span class="line">        Error(<span class="string">&quot;No Spanning Tree&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h1><p>DFS is a generation of preorder traversal</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// T=O(|E|+|V|) as long as adjacency lists are used </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DFS</span><span class="params">(Vertex V)</span></span><br><span class="line">&#123;</span><br><span class="line">    visited[V]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(each W adjacent to V)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[W])</span><br><span class="line">        &#123;</span><br><span class="line">            DFS(W);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Application1-list-components"><a href="#Application1-list-components" class="headerlink" title="Application1: list components"></a>Application1: list components</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ListComponents</span> <span class="params">( Graph G )</span> </span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">for</span> ( each V in G )</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span> (!visited[V])</span><br><span class="line">        &#123;</span><br><span class="line">	        DFS(V);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Application2-Bioconnectivity"><a href="#Application2-Bioconnectivity" class="headerlink" title="Application2: Bioconnectivity"></a>Application2: Bioconnectivity</h2><p><a href="https://classroom.zju.edu.cn/livingroom?course_id=53486&sub_id=1027558">class ZJU</a><br>the main point is to find articulation point</p>
<ol>
<li>use dfs to grow a minimum spanning tree and add back edge<br>some features of Num and this tree<ul>
<li>no edge connecting 2 branches of the root</li>
<li>Num gets bigger when digging down deeper on the tree</li>
</ul>
</li>
<li>the case with root and other vertex is different, you can judge manually(see ppt dfs) or use Lownum to recursively solve it(list below)</li>
</ol>
<h3 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h3><ol>
<li>dfs to get <code>Num</code> array storing the dfs number</li>
<li>recursively calculate Low <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Low(u)=min&#123;</span><br><span class="line">    Num(u),</span><br><span class="line">    min&#123;Low(w)|w is child of u&#125;,</span><br><span class="line">    min&#123;Num(w)|(u,w) is a back edge&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Therefore, u is an articulation point iff<ol>
<li>u is the root and has at least 2 children;  or</li>
<li>u is not the root, and has at least 1 child such that  Low( child )  Num( u ).</li>
</ol>
</li>
</ol>
<h2 id="Application3-Euler-Circuits"><a href="#Application3-Euler-Circuits" class="headerlink" title="Application3: Euler Circuits"></a>Application3: Euler Circuits</h2><ol>
<li><strong>Euler tour</strong>:<ul>
<li>Draw each line exactly once without lifting your pen from the paper </li>
<li>An Euler tour is possible if there are exactly two vertices having odd degree.  One must start at one of the odd-degree vertices.</li>
</ul>
</li>
<li><strong>Euler curcuit</strong><ul>
<li>Draw each line exactly once without lifting your pen from the paper, <strong>AND finish at the starting point</strong></li>
<li>An Euler circuit is possible only if the graph is connected and each vertex has an even degree.</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>FDS</tag>
      </tags>
  </entry>
  <entry>
    <title>模电笔记</title>
    <url>/2023/11/20/%E6%A8%A1%E7%94%B5%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>说明：现在还是习惯纸质，笔记放上来备份，毕竟一张纸一张纸的记录太容易丢了（前面一些课不知道丢了多少了）。</p>
<h1 id="电路原理笔记"><a href="#电路原理笔记" class="headerlink" title="电路原理笔记"></a>电路原理笔记</h1><p>电路与模拟电子技术的前半部分。<br>这一部分pdf里的笔记个人认为毫无营养，和ppt的进行思路没啥区别，故称作课堂笔记。</p>
<h2 id="应试笔记"><a href="#应试笔记" class="headerlink" title="应试笔记"></a>应试笔记</h2><h3 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h3><ol>
<li>参考方向，在KCLKVL的时候当然不容易错，但是放进后面的时候又会忘记了</li>
<li>功率：在关联参考方向下UI大于0是消耗，在非关联参考方向下UI大于0是产生，但是你平时写要是直接所有默认都是正的时候，是看正的UI是不是同一个方向</li>
<li>图片上画着是这个方向，但是可能大小是负的，脑子清醒一点，每个元件都有自己的参考方向！所以最后功率加起来不等于0也是正常的</li>
<li>节点电压法的时候，同一条支路上两个电阻，应该先合并这两个电阻，再求电导，而不是将其电导相加</li>
<li>在使用戴维南定理时，如果待合并的端口A里的受控源的控制量在A外面，这时候不能进行简单的开路，而是将Uab作为电源连接在完整的电路中，A外的电阻不管，但是等效的Uab还是要在。见ppt4.3.3P13</li>
<li>谐振：不同的电路结构对应的C和L可能有对应的等效，具体电路具体分析，注意参考方向</li>
<li>Q的两重定义，一个是从电抗角度，一个是从通频带的角度</li>
<li>非谐振点的影响的公式也要特别记忆一下I&#x2F;I0，至少要知道是怎么推出来的，可能电路结构不一样会有不同的公式</li>
<li>非线性电路的最大功率传输</li>
<li>互感耦合+戴维南的时候，端口开路电压，那个在边上的电感也有串联贡献，即使它自己所在路没有电流，但是别的耦合会给他电压，当然，等效出M另说</li>
<li>给你ut的表达式，写成相量形式的时候不要忘记除以根号二</li>
<li>你算出来I相量，写成表达式还是要乘根号二的</li>
<li>多频率的功率是直接相加的！有效值才是平方</li>
<li>三相：功率说得是三个元件的</li>
</ol>
<h3 id="作业题总结（乱序）："><a href="#作业题总结（乱序）：" class="headerlink" title="作业题总结（乱序）："></a>作业题总结（乱序）：</h3><ol>
<li>响应：根据公式f&#x3D;fp(t)+(f(0+)-fp(0+))e*进行解答，非正弦和直流需要先列出方程求得fp（我的误区：列方程求得的是fp不是ft，所以求完以后还是要带这个公式的）；btw温馨提醒，不要想当然的认为电容进去都是直接等于电源电压的，有受控源你的初值就寄了，哈哈。</li>
<li>奇异电路：关键看是否满足kvlkcl，有纯电容（串联无多）纯电感（并联无多）的支路留意一下，列写方程组：1）节点电荷或磁链守恒（注意正负）2）kvl或kcl</li>
<li>变压器：淡定的默认方向，正负用公式表示比较方便</li>
<li>三相交流电路：（计算-算的时候多保留几位，相差太大了）总体思路就是化成Y型然后求单相，但是注意一般功率都是三相之和，所以不要忘记条件化得单相功率，结果化得三相功率（复功率记得是乘以电流共轭，又忘又忘坏坏坏！）</li>
<li>不对称三相交流电路：在上述步骤（先当做是对称的）上根据线电压（30°）！！！求得不对称的支路电流，再运用kcl求解总电流之类的</li>
<li>三相交流电路易错点：1）求功率不要忘记三相<em>3  2）求有功功率不要忘记乘以cos  3）线电压不要忘记加30°  4）善用PQS</em>可叠加和PQS功率三角形进行求值  5）不要想当然地认为都是YY，也有可能是可合并的串联单相，电路结构还是要遇题拆题</li>
<li>多频电路求解：往往会出现谐振，但是算iL这些的时候，短路电流还是留点心眼，可能需要通过不等效的电流（合电流kcl）进行求解。也就是说，既需要分开，也需要合起来看</li>
<li>二阶电路：记牢三种情况的ode齐次解，自己规定方向时按参考方向（电感电流流入端为正，电容电流流入端为正），步骤为1）写初值 2）根据kclkvl写ode 3）解odes1s2,根据初值待定系数求得A1A2</li>
<li>非线性电路端口特性：注意钳制（这个因为答案略，所以还不是很确定套路）</li>
<li>小信号分析法：注意小信号是正是负，易忽略。步骤为1）小信号置零，求直流作用工作点  2）直流置零，利用动态电阻（求导）求分量  3）两个相加</li>
</ol>
<h2 id="课堂笔记"><a href="#课堂笔记" class="headerlink" title="课堂笔记"></a>课堂笔记</h2>

	<div class="row">
    <embed src="/pdf/电路原理.pdf" width="100%" height="550" type="application/pdf">
	</div>






<h1 id="模拟电路笔记"><a href="#模拟电路笔记" class="headerlink" title="模拟电路笔记"></a>模拟电路笔记</h1><p>电路与模拟电子技术的后半部分。<br>针对上半学期笔记毫无营养的问题，下面两份pdf进行了一定的改进，结合了一部分zyh老师的思路（个人认为这种设计的思路要更好）进行了整理。<br>但是期末复习的时候发现笔记中仍有一些小错误，慎重考虑。<br>这一部分的应试笔记并不是在全部学完之后写的，所以有些易错点现在看来也不是很易错了（将就看叭，谁知道啥时候犯错呢）。</p>
<h2 id="应试笔记-1"><a href="#应试笔记-1" class="headerlink" title="应试笔记"></a>应试笔记</h2><h3 id="易错点-1"><a href="#易错点-1" class="headerlink" title="易错点"></a>易错点</h3><ol>
<li>置顶：不要懒得画微变等效，你的水平估计目测够呛。。。</li>
<li>看清楚是理想二极管否，理想不考虑那个0.7V</li>
<li>多个二极管要考虑抢先导通，单个三极管也是（倒置）</li>
<li>直流偏置画图时不要忘了那个图中没有画出来的输入电阻Rs</li>
<li>当题目给了你特性曲线时，就相当于给了你大量的信息，觉得怪就多想想落下了什么信息，β？</li>
<li>画图的时候小心，按照斜率画的时候可能xy坐标轴单位不一样</li>
<li>求最大不失真电压时，题目可能要求求有效值，而通过图像关系算得的是最大值</li>
<li>判断组态不是看接地，而是看输入输出没有用哪一端</li>
<li>有多个BJT的时候，先判断是电流源+放大型还是多级放大电路，电流源的判断是在直流的时候判断的</li>
<li>多级放大电路算放大倍数的时候可能还要考虑下一级的输入电阻和上一级的输出电阻（你经常忘记）</li>
<li>求静态工作点，不仅要求IC还要求VCE</li>
<li>分析Av的时候，注意绝对值（共射）</li>
<li>算差模的时候，如果两个射极之间还有电阻，不要忘记乘以1+β，但是横着的不用乘以2</li>
<li>CS、CE求Av的时候不要忘记负号</li>
<li>计算静态工作点敲计算器的时候，注意单位，IB算出来不正常要反攻，因为IB基本上是μA级别的</li>
<li>差分放大电路中单端输出的时候放大倍数可能是正的，看是1还是2</li>
<li>注意输出电阻是去掉RL计算的</li>
<li>三极管作恒电流源，如果感觉算不出来看看是不是落下了rce（rce是用电路原理推的，会忽略第二项），注意rce和rbe不要搞混</li>
<li>rbe一般对管相等，但是下面的恒流源不要脑子抽了直接拿上面的用，所以建议算完静态直接把所有管子的rbe都列一下</li>
<li>集成运放在线性工作区时，同相输入端和反相输入端电位差大致为零，但是在非线性放大区就不是了；而iin在非线性和线性放大区都是0</li>
<li>纵坐标是环路增益还是开环增益</li>
</ol>
<h3 id="作业题总结（不全）"><a href="#作业题总结（不全）" class="headerlink" title="作业题总结（不全）"></a>作业题总结（不全）</h3><ol>
<li>（题目索引-作业题3-10,3-1pptPN结P79）稳压二极管的范围题：<ul>
<li>限流电阻范围（尽可能小的安全范围，是保证所有取值都安全，而不是求极值）</li>
<li>判断工作状态（是否能够起到稳压作用，要求稳压管电流大于Imin小于Imax，没有说明则是Imin&#x3D;0A，Imax条件可忽略）</li>
<li>小信号分析法（先确定负载变化范围始终在二极管的稳压工作状态，确定负载两端电压一定，于是可以将负载的电阻变化计算为电流变化【即小电流信号】，利用小信号模型法【这个地方脑子容易转不过来，小信号置零计算，驮载信号置零利用动态电阻计算，再叠加】，得到输出电压波动，允许估算）</li>
</ul>
</li>
<li>场效应管类型判断：<ul>
<li>已知输出特性曲线：<ul>
<li>先看横坐标vDS是否为正判断是P还是N沟道（正为N）</li>
<li>再看曲线的控制变量vGS判断是三类型中的哪个<ul>
<li>【大小判断法】vGS&#x3D;0时已经有电流的是耗尽型，vGS绝对值越大iD越大是mos管，vGS绝对值越小iD越大是JFET</li>
<li>【符号判断法不一定准确可能没画完】正负都可以取是耗尽型，和横坐标同号是MOS增强，和横坐标异号是JFET</li>
</ul>
</li>
<li>E型读横坐标的VT，vGS&#x3D;2VT的IDO；D型读横坐标的VP，vGS&#x3D;0时的IDSS</li>
</ul>
</li>
</ul>
</li>
<li>场效应管的电路分析：<ul>
<li>已知输出特性曲线：<ul>
<li>判断工作状态：假设处于恒流区，根据vGS确定恒流电流，计算vDS（与BJT不同，电流穿透），vDS与VP或VT比较（绝对值比较），判断工作状态</li>
<li>如果是恒流区，即得电流，over</li>
<li>如果是可变电阻区，利用画图法确定</li>
</ul>
</li>
<li>已知主要参数VP&#x2F;VT，IDO&#x2F;IDSS：<ul>
<li>假设工作在恒流区，列写iD和vGS的二元方程组（iD表达式在恒流区假设，与vGS有关），注意检查iD的多解合理性（二次方程，iD与IDSS？）</li>
<li>根据电路结构计算vGD与VP或VT进行比较判断假设是否成立（需要求得VGS和VDS，VGS从上一步求得，VDS看电路）</li>
</ul>
</li>
</ul>
</li>
<li>改正电路使之实现放大功能：<ul>
<li>BJT<ul>
<li>发射结正偏，集电结反偏（直流通路）<ul>
<li>是否有源支持发射结正偏？</li>
<li>戴维宁等效的电压是否会因为下拉电阻为输入电源内阻而过小？（Rs通常不画出来，所以容易忽略这个因素）</li>
<li>源同时支持了发射极和集电极，导致两边电压相等？（非固定偏置）（上拉电阻和下拉电阻画错了？）</li>
</ul>
</li>
<li>信号能否正确的加进去取出来<ul>
<li>交流短接的情况导致输出取不出来？</li>
</ul>
</li>
</ul>
</li>
<li>FET<ul>
<li>恒流区工作条件两项检查：（学习BJT的辨别，记是没用的，要看符号）</li>
<li>怎么改？ 改变偏置方式：固定？自给？混合？ 改变电阻位置：上拉？下拉？ 改变直流偏置电源正负</li>
</ul>
</li>
</ul>
</li>
<li>多级放大电路管子选择：<ul>
<li>输出电阻几十欧姆CC</li>
<li>输入电阻几兆欧姆CS</li>
<li>输入电阻几千欧姆CE</li>
<li>输入电阻几百千欧姆CC</li>
<li>输入电阻几十欧姆CB（获得较大输入电流）</li>
</ul>
</li>
<li>求动态参数题：<ul>
<li>判断组态和功能，是恒流源+大电阻的有源电阻形式还是多级放大电路<ul>
<li>如果是有源电阻（例题：作业1.14）<ul>
<li>通常是S或者E接个电阻来进行负反馈使得即使β变化很大，ie变化还是很小，起到恒流源作用，或者和稳压二极管一起使用（具有稳定工作点的放大电路）</li>
<li>BJT组成的有源电阻看成一个整体（或者用电流源并一个电阻的形式），整体电阻Ro很大，计算上一级的放大倍数是代入Ro基本可以并联的时候近似处理没掉</li>
</ul>
</li>
</ul>
</li>
<li>如果是多级放大电路<ul>
<li>Av&#x3D;Av1<em>AV2</em>…<ul>
<li>某一级Av怎么求？</li>
<li>A：找到out和in的两端，找一条知道电阻和电流（或者电压）的路，KVL直接读出，注意并联和“端”的概念</li>
</ul>
</li>
<li>Ri&#x3D;Ri1<ul>
<li>某一级Ri怎么求？</li>
<li>A：从输入端看进去求，注意和Ro的区别是，Vout是从电阻上取出来的，所以不需要什么置零，本来就是物理存在的。</li>
</ul>
</li>
<li>Ro&#x3D;Ron<ul>
<li>某一级Ro怎么求？</li>
<li>A：从输出端看进去求，RL拿走（空载），vi置零（所以对应的Ib可能会相应地变为0，计算时注意）</li>
</ul>
</li>
<li>以上所有动态指标均是在微变模型下求得的，不要出现直流量</li>
</ul>
</li>
</ul>
</li>
<li>差分放大电路关于差模交流地的说明：<ul>
<li>Q：计算单端输入电阻（或放大倍数）时，为什么要走到另一端，而不是直接在中间停留恰一半呢？明明两端都是地？</li>
<li>A：将单端输入分解成共模和差模，即Ri&#x3D;Vi&#x2F;(ic+id)，经过分析后（后续仿真也证明了这点），ic很小，故可以忽略。</li>
</ul>
</li>
<li>集成运放反馈判断：<ul>
<li>电压反馈还是电流反馈取决于采样量，反馈量（Xf）与这个采样量成正比（但不是由反馈量决定，反馈量决定的是串联和并联）<ul>
<li>判断方法：直接传递的，不用RL的，有时差一个电阻就会不是电压时电流了，所以这个谨慎</li>
<li>电压负反馈：稳定输出电压</li>
<li>电流负反馈：稳定输出电流</li>
</ul>
</li>
<li>串联还是并联反馈：<ul>
<li>判断方法：和Vs在一个端口时并联反馈，在不同端口时串联反馈</li>
</ul>
</li>
<li>正反馈还是负反馈：<ul>
<li>判断方法：一般都是负反馈，看接+还是-输入端</li>
</ul>
</li>
<li>多级放大逐层判断</li>
</ul>
</li>
</ol>
<h2 id="整理笔记"><a href="#整理笔记" class="headerlink" title="整理笔记"></a>整理笔记</h2><h3 id="器件部分"><a href="#器件部分" class="headerlink" title="器件部分"></a>器件部分</h3>

	<div class="row">
    <embed src="/pdf/器件.pdf" width="100%" height="550" type="application/pdf">
	</div>



<h3 id="三组态"><a href="#三组态" class="headerlink" title="三组态"></a>三组态</h3>

	<div class="row">
    <embed src="/pdf/三组态.pdf" width="100%" height="550" type="application/pdf">
	</div>


]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>模电</tag>
      </tags>
  </entry>
  <entry>
    <title>秋冬依然燥烫的紫金港</title>
    <url>/2023/09/06/%E7%A7%8B%E5%86%AC%E4%BE%9D%E7%84%B6%E7%87%A5%E7%83%AB%E7%9A%84%E7%B4%AB%E9%87%91%E6%B8%AF/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="e11d5766c9c0ddaf8ae4e87d24e92014219266494ec2d7d87dc57213f793c210"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">嘿嘿，需要密码~</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>年终</title>
    <url>/2024/01/02/%E5%B9%B4%E7%BB%88/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="1ffc90f0f2c7dd2adc7d456651cb929920dadcad56a319681fc27dcbcfcc70c5">39bba0b2969f7bdf6652fc2d4eeb998bde80ce8a37563a04fdea80fa43c346efd1c0723253e6aa5c7b1729e10956d51874195a339a174b0d11f1ecf82e1dad7d5906708dcc4f7aaa2ad73b953ec0279ac95aa1b6fcc3c0176baee41fddbe59bee419db969a2794613eae1bcff4f7b21fb63cce4fd0f904959ece0166f35c4ee75e410040c3faed77e0d47a0a37faeeaa41b227f05b52e797cd3dbefa4f45e3d7ce8642f46fd72706bda43df76809235b5101b1da913983d40e60ecbfcf377e8b6d590a0ca6fa0bed8023a1b6b9ee639ed97368c7431ca018255a9e7171282d31169551b4f0c3e87bb00e5d51f895b1b28cb2dd56ea3909da1ff386fd7b64b4d168a9137ac39ebe6e9cc8ce7ff5b706e1e396e52eaea0aad454de6a7417a21d55107cb140556d8323e2038af4850043f023162b36f4f07f9d7eb3805722cde0d5f586ef81f48238f124db2684aa910cf6a2451e78e16aececab47772697a3570bb0b122d86ae4cba91879c027d5f2081aaf5d96331418b65e3655239788c5d2e7a7d416b47541d4297be5a5c34464740356e7c36e199ceb090c7fe69b45248b74e37885eae164e6d1cf8ad2183eee4e3f1265514e45005154ab479158dc3b70626412d7a057d84c82de164e360da3d601894013d92253987da6d589cd7747ca2e3feeddce8bdd97c8b1bcc5898bceb76a3c66ca548924831f859d1e5224fe27e6f8a9bb3c56a626a3d6906eaee2b7032bd625b2d74f2d680aac7e2db74537268baa29403f9147e3d7aa1610e376222a3e69e4e7b64e32ec7db47f3c6cc4fa75e7c9271d341c0c39735857fc3efc35cd22b25c151194d727eb32a90a3f58b1f034a660745c403b3655314f0decfb641adb73f94991cf6463bf2dc44deda3103d0d1d80b4fd3eff6f48560ccc42c80df56d6a19bc65f2aefb23cdb480203edc5295a351baee3df03442ed05d242eb3dec95712ec5e6b53dcee3655f44a7155cc93295bec8167b74128eb35ccd55337a991c5f44b66b80c59bfa557ef9b6ca076706caaccef25a4300b22d2fbc5d47f233261f389261bc04b2cc6fff89ac8f9ebfa8e854a55169bda1e338966dc70016c662f7fd6bf7dbb9dc86be6def7040656a9b4cd7a425cc66cf02e182a224ac40d6a75010232e2efe162dc939082b416b9b14d59630a0a1ddaf06f0259b2dfdf2315594a7d976ccc0508e881b04baa63c95f20d63de6cbae7fd945c12914b2ef74987106710de02e692ca1cf20f7ccc293fe8b4bbd92612fbda4afd3a115125a09321aab63f58e7f25fc871c69a8ddc03751e9efd6f84bda8934149bb31f7cebf5f66dec290572e3bcfbd556068048711d45f62617742a4a48d8bc189c1ca4ed6cced4eed824a22a7059567fc22798adffb883d9c01c0dd525bd086105aa2ce0eea6b6745fb351f87b43b8b3858703b753a5f7a95b6354b966fd458f4b22305a09391395a11fe33bbd48204999b04bfa312c3e04610df9e7d96c8b13f71d60581084ed3691fd424451c7e70ba1a4c16151a428ba10d49a84242d2bbad567d937c86e1479765ab6a98a20e14d10753cd84d44e2b960034564af6a1420316e9569b5a40a832f972ff472da30c73a4d9e71767bb1cee5b827d4752bce9e6cf61b2dd5df8ce648cde34187b02babd80212211aa4e4479bb2fe8ae749377cdc721b3a74334840fa62a6f0da2d4ea958365dacce20eaf97d958b077eab7bbf4bfc772a7ae29c65b64c58e7605a8d09cced561abbf90822e54d853450a60dee1e2e89bc960bb6bd012188baa674ae8cbd676bde36850425a9676e5dfb276d89ee4baddec94840323f7276014b8deb75903d54675b2c75192948553d2904216af2f53577f882e7617cf798c710606c3394f3987a115e91c13fb1f212d9737808c6aaccaf9b52fa004914dc12c029d2b22e9bf74c9126806948caeb481f23ae1858053ac8002a47c5bb2881f997651ffe2e930609957a334d1cec715b4cbe66e05ffeabb3e274a099d3fd28695b10f2d3198c6e657de49cda13b0f780df9628a2bca7652f2caea0be970652a49f8ffed8018b81dfef7461b0b7d200e922685fef16e83e8e4c4fdc59a19d57ff29e20583cc3e0cbbe747b26c351c401644ca02cf5f35ce1cea6609ebbb4285b219afa3741b959ca9b93e6b4629ddbc6ed491c54aec28145da5b4ebc34e47b67b6255aabbe43d9c696f1592d6cfb7ead45edb6c13db6ec46ee6f19164f2d2f7a7a6703c83c97ba33268422b6aa13090c9f435ef6b8cea502badbda66cdb0a2c00879e428331a10173cf3db7d364034633c04e841893677eede2c9b6197fef334884ff3cb94b1ab47b732f6f1df37a9059878e965ba440762e8e4dc53b4b98958293a54ca233427b06a068e465e73670cba10913d34c855c23aa675185c4d5aee541e98d8e97d006be07aa03c9a5ad3985886d9abc8e24a90e2a131950ed2dbb1deb49a073da0c5a8b9180b1e127df8454a38c6aff429375d6f715fbfdbbe4caff59ca7e546c9b9de6deaf4048701964f7bc6bc0acecb67e51be216f8aae81cc8c1ed930a852d64fec47e6569d6bdfd19cba29aae63b473c727440c82d697d96a3ddfc36646072c49d017f8d9f594a4baf4f059b28ffe52a3f6abbe3e1c1a2430b455185427e34673378f9cbd993b6267398deeebe26df9919a7761464240c9f6a9c548d0c103ea97b1e2b9bbff49d5220f5206d61b2a0d480543ea62c13fb7894bd4d546c14bc649042db880251bd8f836e8e32fa7c406ab19781e848b3e29aa24fc34c948c6d328504bca285aae406baff19b613e0eca3e72882b480a4b3c3002a3e2099f710303c50d99e71d35cb7bc1d3d8a64319160c709f9546fdf5884ac1f266e5d2bd21588de4167b175a1ae653eea15a8aec70a1ace43184462a22805de872b14f28a6ae3a021d1daf37e17efb1aea2ce9e70df16e4654c6453cbafc535d2d611f7128ba395e1ba366699905677b35dc4d4e57ff3855ed07289ddb2c982f42be918393ab7cad339063b2ef18b135401d71f1c4959bed4052b7e6b09c59970ad6fd63a1e85454ff681e5326db8b10d4b5d2f67b028d9e2e9fcc9580920563e2dcdf191964993f7bd7c28935c96a850c2a8add662f02dfaece218c1a5351fec4fd51962b25f25bcfefafdbb1148b42acefbed5c9aca02505b30289de51c22c5a9aadf1e16dfb10b58fd149f39d9f9ac6af71ec0c4db063bd8984a7a1486735c9b08e23f2d120594ce52fa12159aa30020edb2595bf39a9ded8ef03b3e9f132941f5688817fa209952f7f7ca870536bd20a3918dc8f89ad97b18539cf6c37b34ea224b41e642c5c1489af7b9bc628a2af57dd5d3599442e988eb60406a7aa836147b962025a7faea68ee57a5e3eb1d9e6ab22bde28a02d5cea45502457f7c52d600fe782ea92a176cf8577798fabf71e601c0ed3146e5f75df764a7d1153e8118c7e57ee76f8c67c0a6c2770c016d7e9533153190beb0127d688f406d8dc7aaeb874e8df00ad63718416662c51c1a6b1afba93ad90f74a0836acc48cc07cb2fac67da49ffc4a67be185711882cb402568a1a8aba77b11236e1ec65ed9722d25c80a801b676e17eb3fcbc7a27235cb97db8f41c0874ca9ebc751698e913fb8affb6be53f84d590b8e289d46c0ddbdc02f5f3df4b54a2586098fd45bba139328e3c8696a0611db79f34077f001d7e8d5dc5748047337035aa832c9102936e8a20f3196553c63116c328438c0bcdaa060a7ede742ebb907c1ad91ba2f51d84cc2988b5f002c349e8156bc15415f76b1b2728a4731268bd1efcaa5ce36283edb3eaa1aabb165e68c26a3b4dfe0d9bfcc475b75d54b1c90258583a0fc462863a7d3f01d9982ef1c1c71a2a63edd3defe56c7d9f34370e090ad8d85ab91ed2234fbe8c6e89e9453fa762d5dc3ef260e23c686754ce13eafba3fe366d9101e89ca13e431ff118b3e0d3ebcb6</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">嘿嘿，需要密码~</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
</search>
